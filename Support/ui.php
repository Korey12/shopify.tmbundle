<?php 

/**
* UI
*
* UI Layer to call up TM alerts, dialogs
* 
* NIB related code not exactly working - still needs more r&d, but the simpler
* UI dialogs, menus are working
*/
class UI {

    //Path to the dialog bin
    var $dialog = null;

    /**
     * @param string $dialog path to the dialog bin
     * @return void
     **/
    function __construct($dialog) {
        $this->dialog = $dialog;
    }
    
    /**
     * Print out help
     **/
    public function help($command = '') {
        $response = `{$this->dialog} help {$command}`;
    }
    
    /**
     * Throw up alert
     * @param string $msg Body Mesage of the alert. Use this for simplest use case
     * @param array $options Other more extensive options - button1, button2, title, 
     *      alertStyle:  'warning,' 'informational', 'critical'
     *      title: any string
     *      button1, button2
     * @return response
     **/
    public function alert($msg, $options = array()) {

        $optstring = " --body '{$msg}' ";
        foreach ($options as $key => $value) {
            $optstring .= "--{$key} '$value' ";
        }

        return `{$this->dialog} alert {$optstring}`;
    }


    /**
     * Generate a simple menu
     * like inline one generated by bundles where commands all map to same key.
     * 
     * @param array $items value of items
     * @return string
     **/
    public function menu($items) {
        $optstring = '('.implode(',', $items) .')';
        
        //({title = foo;}, {separator = 1;}, {header=1; title = bar;}, {title = baz;})
        $response = `{$this->dialog} menu --items '{$optstring}'`;
        return $response;
    }

    /**
     * Generate a popup menu 
     * Can specify what it inserts. Otherwise, not sure about the use here. 
     * Good for autocomplete
     * 
     * @return null No response - it writes out to the document you are editing.
     **/
    public function popup() {
        // $opt = array();
        // foreach ($items as $value) {
        //     $opt[] = '{title = "'.$value.'";}';
        // }
        // $optstring = '('.implode(',', $opt) .')';
        
        $optstring = '( { display = law; }, { display = laws; insert = "(${1:hello}, ${2:again})"; } )';
        `{$this->dialog} popup --suggestions '{$optstring}'`;
    }

}
