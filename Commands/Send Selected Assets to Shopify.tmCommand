<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveModifiedFiles</string>
	<key>command</key>
	<string>#!/usr/bin/env php
&lt;?php
require_once getenv('TM_BUNDLE_SUPPORT').'/vars.php';
require_once getenv('TM_BUNDLE_SUPPORT').'/functions.php';

$selectedFiles = explode(' ',getenv('TM_SELECTED_FILES'));
foreach ($selectedFiles as $file) {

    $file = trim($file, "'");
    if(is_dir($file)) {
        continue;
    }

    $assetKey = calc_asset_key($file);

    //Get the extension
    $extension = pathinfo($assetKey, PATHINFO_EXTENSION);

    if(in_array($extension, $imageExtensions)) {
        $filecontents = base64_encode(file_get_contents($file));
        $reqData = sprintf($xmlDataTempImage, $filecontents, $assetKey);
    } else {
        $filecontents = htmlentities(file_get_contents($file), ENT_QUOTES, 'UTF-8');
        $reqData = sprintf($xmlDataTemp, $filecontents, $assetKey);
    }

    //Dump the xml into a tmp file
    $xmlFile = tempnam('/tmp', 'foo').'.xml';
    file_put_contents($xmlFile, $reqData);

    echo "Sending asset: {$assetKey}...&lt;br&gt;";
    $response = send_asset($api_key, $password, $store ,$xmlFile);

    if('200' == $response) {
        echo "Uploaded: {$assetKey}&lt;br&gt;";
    } else {
        // Not ideal, but it works. Problem (though not much of one ): 
        // response on a fail will return the full curl page: ie, shopify 404 full html, + error code at the bottom
        // Will robustify if it becomes an issue. 
        echo "*Error: Could not upload {$assetKey}.&lt;br&gt;" ;
        echo "{$response}&lt;br&gt;";
    }
    //And clean up
    unlink($xmlFile);
}
echo 'Done.';
</string>
	<key>input</key>
	<string>none</string>
	<key>name</key>
	<string>Send Selected Assets to Shopify</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>uuid</key>
	<string>88738C61-48F5-4865-94E4-93D96B92428A</string>
</dict>
</plist>
